name: Publish NuGet

on:
  push:
    branches: 
    - main

jobs:
  publish-nuget:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: RacoonSecure/RacoonSecure.Core
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      
      - name: Install dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
    
      - name: Run Tests
        id: run_tests
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: RacoonSecure/RacoonSecure.Core.Tests/RacoonSecure.Core.Tests.csproj
          report_name: RacoonSecure.Core.Tests
          report_title: RacoonSecure Core Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}
          set_check_status_from_test_outcome: true    

      - name: Fail job on failed tests
        run: exit 1 
        if: ${{ steps.run_tests.outputs.result_value == 'Failed' }}           

      - name: Publish to NuGet
        id: nuget_publish
        uses: brandedoutcast/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: RacoonSecure/RacoonSecure.Core/RacoonSecure.Core.csproj
          VERSION_REGEX: '^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$'
          TAG_FORMAT: '*'
          TAG_COMMINT: false
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

      - name: nupkg path
        run: echo ${{ steps.nuget_publish.outputs.PACKAGE_PATH }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.nuget_publish.outputs.VERSION }}
          prerelease: false
          title: "RacoonSecure"
          files: |
            ${{ steps.nuget_publish.outputs.PACKAGE_PATH }}
            *.zip
      